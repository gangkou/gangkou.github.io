#第一个参数为日志的优先级,分为OFF,FATAL,ERROR,WARN,INFO,DEBUG,ALL或者自定义的级别,但是只建议使用四个级别,从高到低依次是ERROR,WARN,INFO,DEBUG,选择INFO表示看不到DEBUG级别的日志信息;
#后面的参数个数自定义,名称自定义,表示日志的输入位置名称,如下则表示输出到控制台和文件中
log4j.rootLogger=INFO,Console,File
#Log4j提供的appender有以下几种:
# 1.org.apache.log4j.ConsoleAppender(控制台)
# 2.org.apache.log4j.FileAppender(文件)
# 3.org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件)
# 4.org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸时产生一个新的文件)
# 5.org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的位置)
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
# Target的值有System.err;System.out
# 默认情况下是System.out,指定输出到控制台
log4j.appender.Console.Target=System.out
#日志输出在控制台时的编码格式,若包含中文,建议使用gbk(utf-8可能乱码)
log4j.appender.Console.Encoding=gbk
# Log4j提供的layout有以下几种:
# 1.org.apache.log4j.HTMLLayout(以HTML表格形式布局)
# 2.org.apache.log4j.PatternLayout(可以灵活地指定布局模式)
# 3.org.apache.log4j.SimpleLayout(包含日志信息的级别和信息字符串)
# 4.org.apache.log4j.TTCCLayout(包含日志产生的时间、线程、类别等信息)
#可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
# 设置具体的日志格式
#%m 输出代码中指定的消息
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2019年05月07日 14：10：28，110
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)

# 可以在%与模式字符之间加上修饰符来控制其最小宽度、最大宽度、和文本的对齐方式。如：
# 1)%20c：指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，默认的情况下右对齐。
# 2)%-20c:指定输出category的名称，最小的宽度是20，如果category的名称小于20的话，"-"号指定左对齐。
# 3)%.30c:指定输出category的名称，最大的宽度是30，如果category的名称大于30的话，就会将左边多出的字符截掉，但小于30的话也不会有空格。
# 4)%20.30c:如果category的名称小于20就补空格，并且右对齐，如果其名称长于30字符，就从左边较远输出的字符截掉。
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n

#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.File = org.apache.log4j.RollingFileAppender
#指定输出目录,当文件大小到达定义的文件最大尺寸时,将会自动滚动,即将原来的内容移到mylog.txt.1文件
# 若File=logs/mylog.txt,将会在项目的根目录上创建文件夹及文件
log4j.appender.File.File = /../../mylog.txt
# Append 默认是true,即将消息增加到指定文件中,false表示将消息覆盖指定的文件内容
log4j.appender.File.Append=true
#输出到文件的日志的编码格式
log4j.appender.File.Encoding=utf-8
#定义文件最大大小,单位可以是KB,MB,GB
log4j.appender.File.MaxFileSize = 10MB
# 指定日志消息的输出最低层次
# 输出所有日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold = ALL
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss.SSS} - %m%n